{"version":3,"file":"vendors-node_modules_react-navigation_native-stack_src_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-navigation/native-stack/src/index.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useDismissedRouteError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/utils/useInvalidPreventRemoveError.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/DebugContainer.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/FontProcessor.native.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/HeaderConfig.tsx","webpack:///./node_modules/@react-navigation/native-stack/src/views/NativeStackView.native.tsx","webpack:///./node_modules/react-freeze/src/index.tsx","webpack:///./node_modules/react-native-screens/src/TransitionProgressContext.tsx","webpack:///./node_modules/react-native-screens/src/components/FullWindowOverlay.tsx","webpack:///./node_modules/react-native-screens/src/components/Screen.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenContainer.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenStack.tsx","webpack:///./node_modules/react-native-screens/src/components/ScreenStackHeaderConfig.tsx","webpack:///./node_modules/react-native-screens/src/components/SearchBar.tsx","webpack:///./node_modules/react-native-screens/src/components/helpers/DelayedFreeze.tsx","webpack:///./node_modules/react-native-screens/src/core.ts","webpack:///./node_modules/react-native-screens/src/fabric/FullWindowOverlayNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ModalScreenNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/NativeScreensModule.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenContainerNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenNavigationContainerNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenStackHeaderConfigNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenStackHeaderSubviewNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/ScreenStackNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/fabric/SearchBarNativeComponent.ts","webpack:///./node_modules/react-native-screens/src/index.tsx","webpack:///./node_modules/react-native-screens/src/native-stack/contexts/GHContext.tsx","webpack:///./node_modules/react-native-screens/src/types.tsx","webpack:///./node_modules/react-native-screens/src/useTransitionProgress.tsx","webpack:///./node_modules/react-native-screens/src/utils.ts","webpack:///./node_modules/warn-once/index.js"],"sourcesContent":["/**\n * Navigators\n */\nexport { default as createNativeStackNavigator } from './navigators/createNativeStackNavigator';\n\n/**\n * Views\n */\nexport { default as NativeStackView } from './views/NativeStackView';\n\n/**\n * Types\n */\nexport type {\n  NativeStackHeaderProps,\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigatorProps,\n} from '../types';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      NativeStackNavigationOptions,\n      NativeStackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  typeof NativeStackNavigator\n>(NativeStackNavigator);\n","import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n","import { usePreventRemoveContext } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { NativeStackDescriptorMap } from '../types';\n\nexport default function useInvalidPreventRemoveError(\n  descriptors: NativeStackDescriptorMap\n) {\n  const { preventedRoutes } = usePreventRemoveContext();\n  const preventedRouteKey = Object.keys(preventedRoutes)[0];\n  const preventedDescriptor = descriptors[preventedRouteKey];\n  const isHeaderBackButtonMenuEnabledOnPreventedScreen =\n    preventedDescriptor?.options?.headerBackButtonMenuEnabled;\n  const preventedRouteName = preventedDescriptor?.route?.name;\n\n  React.useEffect(() => {\n    if (\n      preventedRouteKey != null &&\n      isHeaderBackButtonMenuEnabledOnPreventedScreen\n    ) {\n      const message =\n        `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` +\n        `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n      console.error(message);\n    }\n  }, [\n    preventedRouteKey,\n    isHeaderBackButtonMenuEnabledOnPreventedScreen,\n    preventedRouteName,\n  ]);\n}\n","import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\n/**\n * This view must *not* be flattened.\n * See https://github.com/software-mansion/react-native-screens/pull/1825\n * for detailed explanation.\n */\nlet DebugContainer = (props: ContainerProps) => {\n  return <View {...props} collapsable={false} />;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} collapsable={false} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} collapsable={false} />;\n  };\n}\n\nexport default DebugContainer;\n","// @ts-ignore: No declaration available\nimport ReactNativeStyleAttributes from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nexport function processFonts(\n  fontFamilies: (string | undefined)[]\n): (string | undefined)[] {\n  // @ts-ignore: React Native types are incorrect here and don't consider fontFamily a style value\n  const fontFamilyProcessor = ReactNativeStyleAttributes.fontFamily?.process;\n  if (typeof fontFamilyProcessor === 'function') {\n    return fontFamilies.map(fontFamilyProcessor);\n  }\n  return fontFamilies;\n}\n","import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  // @ts-expect-error: Available since react-native-screens v3.21\n  isNewBackTitleImplementation,\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyleFlattened.backgroundColor ??\n        (headerBackground != null || headerTransparent\n          ? 'transparent'\n          : colors.card)\n      }\n      backTitle={\n        isNewBackTitleImplementation || headerBackTitleVisible\n          ? headerBackTitle\n          : ' '\n      }\n      // @ts-expect-error: Available since react-native-screens v3.21\n      backTitleVisible={headerBackTitleVisible}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n      blurEffect={headerBlurEffect}\n      color={tintColor}\n      direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n      disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n      hidden={headerShown === false}\n      hideBackButton={headerBackVisible === false}\n      hideShadow={\n        headerShadowVisible === false ||\n        headerBackground != null ||\n        (headerTransparent && headerShadowVisible !== true)\n      }\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n      largeTitleColor={headerLargeTitleStyleFlattened.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n      largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n      title={titleText}\n      titleColor={titleColor}\n      titleFontFamily={titleFontFamily}\n      titleFontSize={titleFontSize}\n      titleFontWeight={titleFontWeight}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={\n        // This defaults to `true`, so we can't pass `undefined`\n        translucent === true\n      }\n    >\n      {Platform.OS === 'ios' ? (\n        <>\n          {headerLeftElement != null ? (\n            <ScreenStackHeaderLeftView>\n              {headerLeftElement}\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleElement != null ? (\n            <ScreenStackHeaderCenterView>\n              {headerTitleElement}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      ) : (\n        <>\n          {headerLeftElement != null || typeof headerTitle === 'function' ? (\n            <ScreenStackHeaderLeftView>\n              <View style={styles.row}>\n                {headerLeftElement}\n                {headerTitleAlign !== 'center' ? (\n                  typeof headerTitle === 'function' ? (\n                    headerTitleElement\n                  ) : (\n                    <HeaderTitle\n                      tintColor={tintColor}\n                      style={headerTitleStyleSupported}\n                    >\n                      {titleText}\n                    </HeaderTitle>\n                  )\n                ) : null}\n              </View>\n            </ScreenStackHeaderLeftView>\n          ) : null}\n          {headerTitleAlign === 'center' ? (\n            <ScreenStackHeaderCenterView>\n              {typeof headerTitle === 'function' ? (\n                headerTitleElement\n              ) : (\n                <HeaderTitle\n                  tintColor={tintColor}\n                  style={headerTitleStyleSupported}\n                >\n                  {titleText}\n                </HeaderTitle>\n              )}\n            </ScreenStackHeaderCenterView>\n          ) : null}\n        </>\n      )}\n      {headerBackImageSource !== undefined ? (\n        <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n      ) : null}\n      {headerRightElement != null ? (\n        <ScreenStackHeaderRightView>\n          {headerRightElement}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {hasHeaderSearchBar ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...headerSearchBarOptions} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          {content}\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerBackground,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  // On models with Dynamic Island the status bar height is smaller than the safe area top inset.\n  const hasDynamicIsland = Platform.OS === 'ios' && topInset > 50;\n  const statusBarHeight = hasDynamicIsland ? topInset - 5 : topInset;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(\n    frame,\n    isModal,\n    statusBarHeight\n  );\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {headerBackground != null ? (\n                /**\n                 * To show a custom header background, we render it at the top of the screen below the header\n                 * The header also needs to be positioned absolutely (with `translucent` style)\n                 */\n                <View\n                  style={[\n                    styles.background,\n                    headerTransparent ? styles.translucent : null,\n                    { height: headerHeight },\n                  ]}\n                >\n                  {headerBackground()}\n                </View>\n              ) : null}\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               *\n               * HeaderConfig must not be first child of a Screen.\n               * See https://github.com/software-mansion/react-native-screens/pull/1825\n               * for detailed explanation\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n    elevation: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n","import React, { Suspense, Fragment } from \"react\";\n\nconst infiniteThenable = { then() {} };\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  if (freeze) {\n    throw infiniteThenable;\n  }\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n","import * as React from 'react';\nimport { Animated } from 'react-native';\n\ntype TransitionProgressContextBody = {\n  progress: Animated.Value;\n  closing: Animated.Value;\n  goingForward: Animated.Value;\n};\n\nexport default React.createContext<TransitionProgressContextBody | undefined>(\n  undefined\n);\n","import React, { PropsWithChildren, ReactNode } from 'react';\nimport { Platform, StyleProp, View, ViewStyle } from 'react-native';\n\n// Native components\nimport FullWindowOverlayNativeComponent from '../fabric/FullWindowOverlayNativeComponent';\nconst NativeFullWindowOverlay: React.ComponentType<\n  PropsWithChildren<{\n    style: StyleProp<ViewStyle>;\n  }>\n> = FullWindowOverlayNativeComponent as any;\n\nfunction FullWindowOverlay(props: { children: ReactNode }) {\n  if (Platform.OS !== 'ios') {\n    console.warn('Using FullWindowOverlay is only valid on iOS devices.');\n    return <View {...props} />;\n  }\n  return (\n    <NativeFullWindowOverlay\n      style={{ position: 'absolute', width: '100%', height: '100%' }}>\n      {props.children}\n    </NativeFullWindowOverlay>\n  );\n}\n\nexport default FullWindowOverlay;\n","/* eslint-disable @typescript-eslint/no-var-requires */\nimport React from 'react';\nimport { Animated, View, Platform } from 'react-native';\n\nimport TransitionProgressContext from '../TransitionProgressContext';\nimport DelayedFreeze from './helpers/DelayedFreeze';\nimport { ScreenProps } from 'react-native-screens';\n\nimport {\n  freezeEnabled,\n  isNativePlatformSupported,\n  screensEnabled,\n} from '../core';\n\n// Native components\nimport ScreenNativeComponent from '../fabric/ScreenNativeComponent';\nimport ModalScreenNativeComponent from '../fabric/ModalScreenNativeComponent';\n\nexport const NativeScreen: React.ComponentType<ScreenProps> =\n  ScreenNativeComponent as any;\nconst AnimatedNativeScreen = Animated.createAnimatedComponent(NativeScreen);\nconst AnimatedNativeModalScreen = Animated.createAnimatedComponent(\n  ModalScreenNativeComponent as React.ComponentType<ScreenProps>\n);\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n  _viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\nexport class InnerScreen extends React.Component<ScreenProps> {\n  private ref: React.ElementRef<typeof View> | null = null;\n  private closing = new Animated.Value(0);\n  private progress = new Animated.Value(0);\n  private goingForward = new Animated.Value(0);\n\n  setNativeProps(props: ScreenProps): void {\n    this.ref?.setNativeProps(props);\n  }\n\n  setRef = (ref: React.ElementRef<typeof View> | null): void => {\n    this.ref = ref;\n    this.props.onComponentRef?.(ref);\n  };\n\n  render() {\n    const {\n      enabled = screensEnabled(),\n      freezeOnBlur = freezeEnabled(),\n      ...rest\n    } = this.props;\n\n    // To maintain default behavior of formSheet stack presentation style and to have reasonable\n    // defaults for new medium-detent iOS API we need to set defaults here\n    const {\n      sheetAllowedDetents = 'large',\n      sheetLargestUndimmedDetent = 'all',\n      sheetGrabberVisible = false,\n      sheetCornerRadius = -1.0,\n      sheetExpandsWhenScrolledToEdge = true,\n      stackPresentation,\n    } = rest;\n\n    if (enabled && isNativePlatformSupported) {\n      // Due to how Yoga resolves layout, we need to have different components for modal nad non-modal screens\n      const AnimatedScreen =\n        Platform.OS === 'android' ||\n        stackPresentation === undefined ||\n        stackPresentation === 'push' ||\n        stackPresentation === 'containedModal' ||\n        stackPresentation === 'containedTransparentModal'\n          ? AnimatedNativeScreen\n          : AnimatedNativeModalScreen;\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        onGestureCancel,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens'\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          this.setRef(ref);\n        } else if (ref?._viewConfig?.validAttributes?.style) {\n          ref._viewConfig.validAttributes.style = {\n            ...ref._viewConfig.validAttributes.style,\n            display: false,\n          };\n          this.setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedScreen\n            {...props}\n            activityState={activityState}\n            sheetAllowedDetents={sheetAllowedDetents}\n            sheetLargestUndimmedDetent={sheetLargestUndimmedDetent}\n            sheetGrabberVisible={sheetGrabberVisible}\n            sheetCornerRadius={sheetCornerRadius}\n            sheetExpandsWhenScrolledToEdge={sheetExpandsWhenScrolledToEdge}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress: this.progress,\n                          closing: this.closing,\n                          goingForward: this.goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true }\n                  )\n            }\n            onGestureCancel={\n              onGestureCancel ??\n              (() => {\n                // for internal use\n              })\n            }>\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress: this.progress,\n                  closing: this.closing,\n                  goingForward: this.goingForward,\n                }}>\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={this.setRef}\n          {...props}\n        />\n      );\n    }\n  }\n}\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nexport const ScreenContext = React.createContext(InnerScreen);\n\nclass Screen extends React.Component<ScreenProps> {\n  static contextType = ScreenContext;\n\n  render() {\n    const ScreenWrapper = (this.context || InnerScreen) as React.ElementType;\n    return <ScreenWrapper {...this.props} />;\n  }\n}\n\nexport default Screen;\n","import { Platform, View } from 'react-native';\nimport React from 'react';\nimport { ScreenContainerProps } from 'react-native-screens';\nimport { isNativePlatformSupported, screensEnabled } from '../core';\n\n// Native components\nimport ScreenContainerNativeComponent from '../fabric/ScreenContainerNativeComponent';\nimport ScreenNavigationContainerNativeComponent from '../fabric/ScreenNavigationContainerNativeComponent';\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> =\n  Platform.OS !== 'web' ? (ScreenContainerNativeComponent as any) : View;\nexport const NativeScreenNavigationContainer: React.ComponentType<ScreenContainerProps> =\n  Platform.OS !== 'web'\n    ? (ScreenNavigationContainerNativeComponent as any)\n    : View;\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = screensEnabled(), hasTwoStates, ...rest } = props;\n\n  if (enabled && isNativePlatformSupported) {\n    if (hasTwoStates) {\n      const ScreenNavigationContainer =\n        Platform.OS === 'ios'\n          ? NativeScreenNavigationContainer\n          : NativeScreenContainer;\n      return <ScreenNavigationContainer {...rest} />;\n    }\n    return <NativeScreenContainer {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nexport default ScreenContainer;\n","import React from 'react';\nimport { ScreenStackProps, freezeEnabled } from 'react-native-screens';\nimport DelayedFreeze from './helpers/DelayedFreeze';\n\n// Native components\nimport ScreenStackNativeComponent from '../fabric/ScreenStackNativeComponent';\nconst NativeScreenStack: React.ComponentType<ScreenStackProps> =\n  ScreenStackNativeComponent as any;\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const { children, gestureDetectorBridge, ...rest } = props;\n  const ref = React.useRef(null);\n  const size = React.Children.count(children);\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const isFreezeEnabled =\n      descriptor?.options?.freezeOnBlur ?? freezeEnabled();\n\n    return (\n      <DelayedFreeze freeze={isFreezeEnabled && size - index > 1}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  React.useEffect(() => {\n    if (gestureDetectorBridge) {\n      gestureDetectorBridge.current.stackUseEffectCallback(ref);\n    }\n  });\n  return (\n    <NativeScreenStack {...rest} ref={ref}>\n      {childrenWithFreeze}\n    </NativeScreenStack>\n  );\n}\n\nexport default ScreenStack;\n","import React from 'react';\nimport {\n  HeaderSubviewTypes,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from 'react-native-screens';\nimport { Image, ImageProps, StyleSheet, ViewProps } from 'react-native';\n\n// Native components\nimport ScreenStackHeaderConfigNativeComponent from '../fabric/ScreenStackHeaderConfigNativeComponent';\nimport ScreenStackHeaderSubviewNativeComponent from '../fabric/ScreenStackHeaderSubviewNativeComponent';\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> =\n  ScreenStackHeaderConfigNativeComponent as any;\nexport const ScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n> = ScreenStackHeaderSubviewNativeComponent as any;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <ScreenStackHeaderSubview type=\"back\" style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreenStackHeaderSubview>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => (\n  <ScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React, { ReactNode } from 'react';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  SearchBarCommands,\n  SearchBarProps,\n} from 'react-native-screens';\nimport { View } from 'react-native';\n\n// Native components\nimport SearchBarNativeComponent, {\n  Commands as SearchBarNativeCommands,\n} from '../fabric/SearchBarNativeComponent';\n\nexport const NativeSearchBar: React.ComponentType<SearchBarProps> &\n  typeof NativeSearchBarCommands = SearchBarNativeComponent as any;\nexport const NativeSearchBarCommands: SearchBarCommandsType =\n  SearchBarNativeCommands as any;\n\ntype SearchBarCommandsType = {\n  blur: (viewRef: React.ElementRef<typeof NativeSearchBar>) => void;\n  focus: (viewRef: React.ElementRef<typeof NativeSearchBar>) => void;\n  clearText: (viewRef: React.ElementRef<typeof NativeSearchBar>) => void;\n  toggleCancelButton: (\n    viewRef: React.ElementRef<typeof NativeSearchBar>,\n    flag: boolean\n  ) => void;\n  setText: (\n    viewRef: React.ElementRef<typeof NativeSearchBar>,\n    text: string\n  ) => void;\n  cancelSearch: (viewRef: React.ElementRef<typeof NativeSearchBar>) => void;\n};\n\nclass SearchBar extends React.Component<SearchBarProps> {\n  nativeSearchBarRef: React.RefObject<SearchBarCommands>;\n\n  constructor(props: SearchBarProps) {\n    super(props);\n    this.nativeSearchBarRef = React.createRef();\n  }\n\n  _callMethodWithRef(method: (ref: SearchBarCommands) => void) {\n    const ref = this.nativeSearchBarRef.current;\n    if (ref) {\n      method(ref);\n    } else {\n      console.warn(\n        'Reference to native search bar component has not been updated yet'\n      );\n    }\n  }\n\n  blur() {\n    this._callMethodWithRef(ref => NativeSearchBarCommands.blur(ref));\n  }\n\n  focus() {\n    this._callMethodWithRef(ref => NativeSearchBarCommands.focus(ref));\n  }\n\n  toggleCancelButton(flag: boolean) {\n    this._callMethodWithRef(ref =>\n      NativeSearchBarCommands.toggleCancelButton(ref, flag)\n    );\n  }\n\n  clearText() {\n    this._callMethodWithRef(ref => NativeSearchBarCommands.clearText(ref));\n  }\n\n  setText(text: string) {\n    this._callMethodWithRef(ref => NativeSearchBarCommands.setText(ref, text));\n  }\n\n  cancelSearch() {\n    this._callMethodWithRef(ref => NativeSearchBarCommands.cancelSearch(ref));\n  }\n\n  render() {\n    if (!isSearchBarAvailableForCurrentPlatform) {\n      console.warn(\n        'Importing SearchBar is only valid on iOS and Android devices.'\n      );\n      return View as any as ReactNode;\n    }\n\n    return <NativeSearchBar {...this.props} ref={this.nativeSearchBarRef} />;\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Freeze } from 'react-freeze';\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  React.useEffect(() => {\n    const id = setImmediate(() => {\n      setFreezeState(freeze);\n    });\n    return () => {\n      clearImmediate(id);\n    };\n  }, [freeze]);\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nexport default DelayedFreeze;\n","import { Platform, UIManager } from 'react-native';\n\n// const that tells if the library should use new implementation, will be undefined for older versions\nexport const shouldUseActivityState = true;\n\nexport const isNativePlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isNativePlatformSupported;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n\n  if (!isNativePlatformSupported) {\n    return;\n  }\n\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nexport function enableFreeze(shouldEnableReactFreeze = true) {\n  if (!isNativePlatformSupported) {\n    return;\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport function freezeEnabled() {\n  return ENABLE_FREEZE;\n}\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>('RNSFullWindowOverlay', {});\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue } from 'react-native';\nimport type {\n  DirectEventHandler,\n  WithDefault,\n  Int32,\n  Float,\n  Double,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype ScreenEvent = Readonly<{}>;\n\ntype ScreenDismissedEvent = Readonly<{\n  dismissCount: Int32;\n}>;\n\ntype TransitionProgressEvent = Readonly<{\n  progress: Double;\n  closing: Int32;\n  goingForward: Int32;\n}>;\n\ntype HeaderHeightChangeEvent = Readonly<{\n  headerHeight: Double;\n}>;\n\ntype GestureResponseDistanceType = Readonly<{\n  start: Float;\n  end: Float;\n  top: Float;\n  bottom: Float;\n}>;\n\ntype StackPresentation =\n  | 'push'\n  | 'modal'\n  | 'transparentModal'\n  | 'fullScreenModal'\n  | 'formSheet'\n  | 'containedModal'\n  | 'containedTransparentModal';\n\ntype StackAnimation =\n  | 'default'\n  | 'flip'\n  | 'simple_push'\n  | 'none'\n  | 'fade'\n  | 'slide_from_right'\n  | 'slide_from_left'\n  | 'slide_from_bottom'\n  | 'fade_from_bottom'\n  | 'ios';\n\ntype SwipeDirection = 'vertical' | 'horizontal';\n\ntype ReplaceAnimation = 'pop' | 'push';\n\ntype SheetDetentTypes = 'large' | 'medium' | 'all';\n\nexport interface NativeProps extends ViewProps {\n  onAppear?: DirectEventHandler<ScreenEvent>;\n  onDisappear?: DirectEventHandler<ScreenEvent>;\n  onDismissed?: DirectEventHandler<ScreenDismissedEvent>;\n  onNativeDismissCancelled?: DirectEventHandler<ScreenDismissedEvent>;\n  onWillAppear?: DirectEventHandler<ScreenEvent>;\n  onWillDisappear?: DirectEventHandler<ScreenEvent>;\n  onHeaderHeightChange?: DirectEventHandler<HeaderHeightChangeEvent>;\n  onTransitionProgress?: DirectEventHandler<TransitionProgressEvent>;\n  onGestureCancel?: DirectEventHandler<ScreenEvent>;\n  onHeaderBackButtonClicked?: DirectEventHandler<ScreenEvent>;\n  sheetAllowedDetents?: WithDefault<SheetDetentTypes, 'large'>;\n  sheetLargestUndimmedDetent?: WithDefault<SheetDetentTypes, 'all'>;\n  sheetGrabberVisible?: WithDefault<boolean, false>;\n  sheetCornerRadius?: WithDefault<Float, -1.0>;\n  sheetExpandsWhenScrolledToEdge?: WithDefault<boolean, false>;\n  customAnimationOnSwipe?: boolean;\n  fullScreenSwipeEnabled?: boolean;\n  homeIndicatorHidden?: boolean;\n  preventNativeDismiss?: boolean;\n  gestureEnabled?: WithDefault<boolean, true>;\n  statusBarColor?: ColorValue;\n  statusBarHidden?: boolean;\n  screenOrientation?: string;\n  statusBarAnimation?: string;\n  statusBarStyle?: string;\n  statusBarTranslucent?: boolean;\n  gestureResponseDistance?: GestureResponseDistanceType;\n  stackPresentation?: WithDefault<StackPresentation, 'push'>;\n  stackAnimation?: WithDefault<StackAnimation, 'default'>;\n  transitionDuration?: WithDefault<Int32, 350>;\n  replaceAnimation?: WithDefault<ReplaceAnimation, 'pop'>;\n  swipeDirection?: WithDefault<SwipeDirection, 'horizontal'>;\n  hideKeyboardOnSwipe?: boolean;\n  activityState?: WithDefault<Float, -1.0>;\n  navigationBarColor?: ColorValue;\n  navigationBarHidden?: boolean;\n  nativeBackButtonDismissalEnabled?: boolean;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNSModalScreen', {\n  interfaceOnly: true,\n});\n","/* eslint-disable @typescript-eslint/ban-types */\nimport type { TurboModule } from 'react-native';\nimport { TurboModuleRegistry } from 'react-native';\n\nexport interface Spec extends TurboModule {}\n\nexport default TurboModuleRegistry.get<Spec>('RNSModule');\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>('RNSScreenContainer', {});\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue } from 'react-native';\nimport type {\n  DirectEventHandler,\n  WithDefault,\n  Int32,\n  Float,\n  Double,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype ScreenEvent = Readonly<{}>;\n\ntype ScreenDismissedEvent = Readonly<{\n  dismissCount: Int32;\n}>;\n\ntype TransitionProgressEvent = Readonly<{\n  progress: Double;\n  closing: Int32;\n  goingForward: Int32;\n}>;\n\ntype HeaderHeightChangeEvent = Readonly<{\n  headerHeight: Double;\n}>;\n\ntype GestureResponseDistanceType = Readonly<{\n  start: Float;\n  end: Float;\n  top: Float;\n  bottom: Float;\n}>;\n\ntype StackPresentation =\n  | 'push'\n  | 'modal'\n  | 'transparentModal'\n  | 'fullScreenModal'\n  | 'formSheet'\n  | 'containedModal'\n  | 'containedTransparentModal';\n\ntype StackAnimation =\n  | 'default'\n  | 'flip'\n  | 'simple_push'\n  | 'none'\n  | 'fade'\n  | 'slide_from_right'\n  | 'slide_from_left'\n  | 'slide_from_bottom'\n  | 'fade_from_bottom'\n  | 'ios';\n\ntype SwipeDirection = 'vertical' | 'horizontal';\n\ntype ReplaceAnimation = 'pop' | 'push';\n\ntype SheetDetentTypes = 'large' | 'medium' | 'all';\n\nexport interface NativeProps extends ViewProps {\n  onAppear?: DirectEventHandler<ScreenEvent>;\n  onDisappear?: DirectEventHandler<ScreenEvent>;\n  onDismissed?: DirectEventHandler<ScreenDismissedEvent>;\n  onNativeDismissCancelled?: DirectEventHandler<ScreenDismissedEvent>;\n  onWillAppear?: DirectEventHandler<ScreenEvent>;\n  onWillDisappear?: DirectEventHandler<ScreenEvent>;\n  onHeaderHeightChange?: DirectEventHandler<HeaderHeightChangeEvent>;\n  onTransitionProgress?: DirectEventHandler<TransitionProgressEvent>;\n  onGestureCancel?: DirectEventHandler<ScreenEvent>;\n  onHeaderBackButtonClicked?: DirectEventHandler<ScreenEvent>;\n  sheetAllowedDetents?: WithDefault<SheetDetentTypes, 'large'>;\n  sheetLargestUndimmedDetent?: WithDefault<SheetDetentTypes, 'all'>;\n  sheetGrabberVisible?: WithDefault<boolean, false>;\n  sheetCornerRadius?: WithDefault<Float, -1.0>;\n  sheetExpandsWhenScrolledToEdge?: WithDefault<boolean, false>;\n  customAnimationOnSwipe?: boolean;\n  fullScreenSwipeEnabled?: boolean;\n  homeIndicatorHidden?: boolean;\n  preventNativeDismiss?: boolean;\n  gestureEnabled?: WithDefault<boolean, true>;\n  statusBarColor?: ColorValue;\n  statusBarHidden?: boolean;\n  screenOrientation?: string;\n  statusBarAnimation?: string;\n  statusBarStyle?: string;\n  statusBarTranslucent?: boolean;\n  gestureResponseDistance?: GestureResponseDistanceType;\n  stackPresentation?: WithDefault<StackPresentation, 'push'>;\n  stackAnimation?: WithDefault<StackAnimation, 'default'>;\n  transitionDuration?: WithDefault<Int32, 350>;\n  replaceAnimation?: WithDefault<ReplaceAnimation, 'pop'>;\n  swipeDirection?: WithDefault<SwipeDirection, 'horizontal'>;\n  hideKeyboardOnSwipe?: boolean;\n  activityState?: WithDefault<Float, -1.0>;\n  navigationBarColor?: ColorValue;\n  navigationBarHidden?: boolean;\n  nativeBackButtonDismissalEnabled?: boolean;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNSScreen', {\n  interfaceOnly: true,\n});\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\n\ninterface NativeProps extends ViewProps {}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNSScreenNavigationContainer',\n  {}\n);\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue } from 'react-native';\nimport type {\n  Int32,\n  WithDefault,\n  DirectEventHandler,\n} from 'react-native/Libraries/Types/CodegenTypes';\n\ntype DirectionType = 'rtl' | 'ltr';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnAttachedEvent = Readonly<{}>;\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype OnDetachedEvent = Readonly<{}>;\n\nexport interface NativeProps extends ViewProps {\n  onAttached?: DirectEventHandler<OnAttachedEvent>;\n  onDetached?: DirectEventHandler<OnDetachedEvent>;\n  backgroundColor?: ColorValue;\n  backTitle?: string;\n  backTitleFontFamily?: string;\n  backTitleFontSize?: Int32;\n  backTitleVisible?: WithDefault<boolean, 'true'>;\n  color?: ColorValue;\n  direction?: WithDefault<DirectionType, 'ltr'>;\n  hidden?: boolean;\n  hideShadow?: boolean;\n  largeTitle?: boolean;\n  largeTitleFontFamily?: string;\n  largeTitleFontSize?: Int32;\n  largeTitleFontWeight?: string;\n  largeTitleBackgroundColor?: ColorValue;\n  largeTitleHideShadow?: boolean;\n  largeTitleColor?: ColorValue;\n  translucent?: boolean;\n  title?: string;\n  titleFontFamily?: string;\n  titleFontSize?: Int32;\n  titleFontWeight?: string;\n  titleColor?: ColorValue;\n  disableBackButtonMenu?: boolean;\n  hideBackButton?: boolean;\n  backButtonInCustomView?: boolean;\n  // TODO: implement this props on iOS\n  topInsetEnabled?: boolean;\n}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNSScreenStackHeaderConfig',\n  {}\n);\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\nimport type { WithDefault } from 'react-native/Libraries/Types/CodegenTypes';\n\nexport type HeaderSubviewTypes =\n  | 'back'\n  | 'right'\n  | 'left'\n  | 'title'\n  | 'center'\n  | 'searchBar';\n\nexport interface NativeProps extends ViewProps {\n  type?: WithDefault<HeaderSubviewTypes, 'left'>;\n}\n\nexport default codegenNativeComponent<NativeProps>(\n  'RNSScreenStackHeaderSubview',\n  {}\n);\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps } from 'react-native';\nimport type { DirectEventHandler } from 'react-native/Libraries/Types/CodegenTypes';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype FinishTransitioningEvent = Readonly<{}>;\n\ninterface NativeProps extends ViewProps {\n  onFinishTransitioning?: DirectEventHandler<FinishTransitioningEvent>;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNSScreenStack', {});\n","/* eslint-disable */\nimport codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type { ViewProps, ColorValue, HostComponent } from 'react-native';\nimport type {\n  WithDefault,\n  DirectEventHandler,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport codegenNativeCommands from 'react-native/Libraries/Utilities/codegenNativeCommands';\n\ntype SearchBarEvent = Readonly<{}>;\n\ntype SearchButtonPressedEvent = Readonly<{\n  text?: string;\n}>;\n\ntype ChangeTextEvent = Readonly<{\n  text?: string;\n}>;\n\ntype SearchBarPlacement = 'automatic' | 'inline' | 'stacked';\n\ntype AutoCapitalizeType = 'none' | 'words' | 'sentences' | 'characters';\n\ninterface NativeProps extends ViewProps {\n  onFocus?: DirectEventHandler<SearchBarEvent> | null;\n  onBlur?: DirectEventHandler<SearchBarEvent> | null;\n  onSearchButtonPress?: DirectEventHandler<SearchButtonPressedEvent> | null;\n  onCancelButtonPress?: DirectEventHandler<SearchBarEvent> | null;\n  onChangeText?: DirectEventHandler<ChangeTextEvent> | null;\n  hideWhenScrolling?: boolean;\n  autoCapitalize?: WithDefault<AutoCapitalizeType, 'none'>;\n  placeholder?: string;\n  placement?: WithDefault<SearchBarPlacement, 'stacked'>;\n  obscureBackground?: boolean;\n  hideNavigationBar?: boolean;\n  cancelButtonText?: string;\n  // TODO: implement these on iOS\n  barTintColor?: ColorValue;\n  tintColor?: ColorValue;\n  textColor?: ColorValue;\n\n  // Android only\n  disableBackButtonOverride?: boolean;\n  // TODO: consider creating enum here\n  inputType?: string;\n  onClose?: DirectEventHandler<SearchBarEvent> | null;\n  onOpen?: DirectEventHandler<SearchBarEvent> | null;\n  hintTextColor?: ColorValue;\n  headerIconColor?: ColorValue;\n  shouldShowHintSearchIcon?: WithDefault<boolean, true>;\n}\n\ntype ComponentType = HostComponent<NativeProps>;\n\ninterface NativeCommands {\n  blur: (viewRef: React.ElementRef<ComponentType>) => void;\n  focus: (viewRef: React.ElementRef<ComponentType>) => void;\n  clearText: (viewRef: React.ElementRef<ComponentType>) => void;\n  toggleCancelButton: (\n    viewRef: React.ElementRef<ComponentType>,\n    flag: boolean\n  ) => void;\n  setText: (viewRef: React.ElementRef<ComponentType>, text: string) => void;\n  cancelSearch: (viewRef: React.ElementRef<ComponentType>) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: [\n    'blur',\n    'focus',\n    'clearText',\n    'toggleCancelButton',\n    'setText',\n    'cancelSearch',\n  ],\n});\n\nexport default codegenNativeComponent<NativeProps>('RNSSearchBar', {});\n","export * from './types';\n\n/*\n * Core\n */\nexport {\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  freezeEnabled,\n  shouldUseActivityState,\n} from './core';\n\n/*\n * RNS Components\n */\nexport {\n  default as Screen,\n  NativeScreen,\n  InnerScreen,\n  ScreenContext,\n} from './components/Screen';\n\nexport {\n  default as ScreenContainer,\n  NativeScreenContainer,\n  NativeScreenNavigationContainer,\n} from './components/ScreenContainer';\n\nexport { default as ScreenStack } from './components/ScreenStack';\n\nexport {\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderSubview,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderSearchBarView,\n} from './components/ScreenStackHeaderConfig';\n\nexport {\n  default as SearchBar,\n  NativeSearchBar,\n  NativeSearchBarCommands,\n} from './components/SearchBar';\n\nexport { default as FullWindowOverlay } from './components/FullWindowOverlay';\n\n/*\n * Modules\n */\nexport { default as NativeScreensModule } from './fabric/NativeScreensModule';\n\n/*\n * Contexts\n */\nexport { GHContext } from './native-stack/contexts/GHContext';\n\n/*\n * Utils\n */\nexport {\n  isSearchBarAvailableForCurrentPlatform,\n  isNewBackTitleImplementation,\n  executeNativeBackPress,\n} from './utils';\n\n/*\n * Hooks\n */\nexport { default as useTransitionProgress } from './useTransitionProgress';\n","import React, { PropsWithChildren } from 'react';\nimport { GestureProviderProps } from '../types';\n\n// context to be used when the user wants full screen swipe (see `gesture-handler` folder in repo)\nexport const GHContext = React.createContext(\n  (props: PropsWithChildren<GestureProviderProps>) => <>{props.children}</>\n);\n","import React from 'react';\nimport {\n  Animated,\n  NativeSyntheticEvent,\n  ViewProps,\n  View,\n  TargetedEvent,\n  TextInputFocusEventData,\n  ColorValue,\n} from 'react-native';\nimport { NativeStackNavigatorProps } from './native-stack/types';\n\nexport type SearchBarCommands = {\n  focus: () => void;\n  blur: () => void;\n  clearText: () => void;\n  toggleCancelButton: (show: boolean) => void;\n  setText: (text: string) => void;\n  cancelSearch: () => void;\n};\n\nexport type StackPresentationTypes =\n  | 'push'\n  | 'modal'\n  | 'transparentModal'\n  | 'containedModal'\n  | 'containedTransparentModal'\n  | 'fullScreenModal'\n  | 'formSheet';\nexport type StackAnimationTypes =\n  | 'default'\n  | 'fade'\n  | 'fade_from_bottom'\n  | 'flip'\n  | 'none'\n  | 'simple_push'\n  | 'slide_from_bottom'\n  | 'slide_from_right'\n  | 'slide_from_left'\n  | 'ios';\nexport type BlurEffectTypes =\n  | 'extraLight'\n  | 'light'\n  | 'dark'\n  | 'regular'\n  | 'prominent'\n  | 'systemUltraThinMaterial'\n  | 'systemThinMaterial'\n  | 'systemMaterial'\n  | 'systemThickMaterial'\n  | 'systemChromeMaterial'\n  | 'systemUltraThinMaterialLight'\n  | 'systemThinMaterialLight'\n  | 'systemMaterialLight'\n  | 'systemThickMaterialLight'\n  | 'systemChromeMaterialLight'\n  | 'systemUltraThinMaterialDark'\n  | 'systemThinMaterialDark'\n  | 'systemMaterialDark'\n  | 'systemThickMaterialDark'\n  | 'systemChromeMaterialDark';\nexport type ScreenReplaceTypes = 'push' | 'pop';\nexport type SwipeDirectionTypes = 'vertical' | 'horizontal';\nexport type ScreenOrientationTypes =\n  | 'default'\n  | 'all'\n  | 'portrait'\n  | 'portrait_up'\n  | 'portrait_down'\n  | 'landscape'\n  | 'landscape_left'\n  | 'landscape_right';\nexport type HeaderSubviewTypes =\n  | 'back'\n  | 'right'\n  | 'left'\n  | 'center'\n  | 'searchBar';\n\nexport type HeaderHeightChangeEventType = {\n  headerHeight: number;\n};\n\nexport type TransitionProgressEventType = {\n  progress: number;\n  closing: number;\n  goingForward: number;\n};\n\nexport type GestureResponseDistanceType = {\n  start?: number;\n  end?: number;\n  top?: number;\n  bottom?: number;\n};\n\nexport type SheetDetentTypes = 'medium' | 'large' | 'all';\nexport type SearchBarPlacement = 'automatic' | 'inline' | 'stacked';\n\nexport interface ScreenProps extends ViewProps {\n  active?: 0 | 1 | Animated.AnimatedInterpolation<number>;\n  activityState?: 0 | 1 | 2 | Animated.AnimatedInterpolation<number>;\n  children?: React.ReactNode;\n  /**\n   * Boolean indicating that swipe dismissal should trigger animation provided by `stackAnimation`. Defaults to `false`.\n   *\n   * @platform ios\n   */\n  customAnimationOnSwipe?: boolean;\n  /**\n   * All children screens should have the same value of their \"enabled\" prop as their container.\n   */\n  enabled?: boolean;\n  /**\n   * Internal boolean used to not attach events used only by native-stack. It prevents non native-stack navigators from sending transition progress from their Screen components.\n   */\n  isNativeStack?: boolean;\n  /**\n   * Internal boolean used to detect if current header has large title on iOS.\n   */\n  hasLargeHeader?: boolean;\n  /**\n   * Whether inactive screens should be suspended from re-rendering. Defaults to `false`.\n   * When `enableFreeze()` is run at the top of the application defaults to `true`.\n   */\n  freezeOnBlur?: boolean;\n  /**\n   * Boolean indicating whether the swipe gesture should work on whole screen. Swiping with this option results in the same transition animation as `simple_push` by default.\n   * It can be changed to other custom animations with `customAnimationOnSwipe` prop, but default iOS swipe animation is not achievable due to usage of custom recognizer.\n   * Defaults to `false`.\n   *\n   * @platform ios\n   */\n  fullScreenSwipeEnabled?: boolean;\n  /**\n   * Whether you can use gestures to dismiss this screen. Defaults to `true`.\n   *\n   * @platform ios\n   */\n  gestureEnabled?: boolean;\n  /**\n   * Use it to restrict the distance from the edges of screen in which the gesture should be recognized. To be used alongside `fullScreenSwipeEnabled`.\n   *\n   * @platform ios\n   */\n  gestureResponseDistance?: GestureResponseDistanceType;\n  /**\n   * Whether the home indicator should be hidden on this screen. Defaults to `false`.\n   *\n   * @platform ios\n   */\n  homeIndicatorHidden?: boolean;\n  /**\n   * Whether the keyboard should hide when swiping to the previous screen. Defaults to `false`.\n   *\n   * @platform ios\n   */\n  hideKeyboardOnSwipe?: boolean;\n  /**\n   * Boolean indicating whether, when the Android default back button is clicked, the `pop` action should be performed on the native side or on the JS side to be able to prevent it.\n   * Unfortunately the same behavior is not available on iOS since the behavior of native back button cannot be changed there.\n   * Defaults to `false`.\n   *\n   * @platform android\n   */\n  nativeBackButtonDismissalEnabled?: boolean;\n  /**\n   * Sets the navigation bar color. Defaults to initial status bar color.\n   *\n   * @platform android\n   */\n  navigationBarColor?: ColorValue;\n  /**\n   * Sets the visibility of the navigation bar. Defaults to `false`.\n   *\n   * @platform android\n   */\n  navigationBarHidden?: boolean;\n  /**\n   * A callback that gets called when the current screen appears.\n   */\n  onAppear?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onComponentRef?: (view: unknown) => void;\n  /**\n   * A callback that gets called when the current screen disappears.\n   */\n  onDisappear?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  /**\n   * A callback that gets called when the current screen is dismissed by hardware back (on Android) or dismiss gesture (swipe back or down).\n   * The callback takes the number of dismissed screens as an argument since iOS 14 native header back button can pop more than 1 screen at a time.\n   */\n  onDismissed?: (e: NativeSyntheticEvent<{ dismissCount: number }>) => void;\n  /**\n   * A callback that gets called when the header height has changed.\n   */\n  onHeaderHeightChange?: (\n    e: NativeSyntheticEvent<HeaderHeightChangeEventType>\n  ) => void;\n  /**\n   * A callback that gets called after swipe back is canceled.\n   */\n  onGestureCancel?: (e: NativeSyntheticEvent<null>) => void;\n  /**\n   * An internal callback that gets called when the native header back button is clicked on Android and `enableNativeBackButtonDismissal` is set to `false`. It dismises the screen using `navigation.pop()`.\n   *\n   * @platform android\n   */\n  onHeaderBackButtonClicked?: () => void;\n  /**\n   * An internal callback called when screen is dismissed by gesture or by native header back button and `preventNativeDismiss` is set to `true`.\n   *\n   * @platform ios\n   */\n  onNativeDismissCancelled?: (\n    e: NativeSyntheticEvent<{ dismissCount: number }>\n  ) => void;\n  /**\n   * An internal callback called every frame during the transition of screens of `native-stack`, used to feed transition context.\n   */\n  onTransitionProgress?: (\n    e: NativeSyntheticEvent<TransitionProgressEventType>\n  ) => void;\n  /**\n   * A callback that gets called when the current screen will appear. This is called as soon as the transition begins.\n   */\n  onWillAppear?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  /**\n   * A callback that gets called when the current screen will disappear. This is called as soon as the transition begins.\n   */\n  onWillDisappear?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  /**\n   * Boolean indicating whether to prevent current screen from being dismissed.\n   * Defaults to `false`.\n   *\n   * @platform ios\n   */\n  preventNativeDismiss?: boolean;\n  ref?: React.Ref<View>;\n  /**\n   * How should the screen replacing another screen animate. Defaults to `pop`.\n   * The following values are currently supported:\n   * - \"push\" – the new screen will perform push animation.\n   * - \"pop\" – the new screen will perform pop animation.\n   */\n  replaceAnimation?: ScreenReplaceTypes;\n  /**\n   * In which orientation should the screen appear.\n   * The following values are currently supported:\n   * - \"default\" - resolves to \"all\" without \"portrait_down\" on iOS. On Android, this lets the system decide the best orientation.\n   * - \"all\" – all orientations are permitted\n   * - \"portrait\" – portrait orientations are permitted\n   * - \"portrait_up\" – right-side portrait orientation is permitted\n   * - \"portrait_down\" – upside-down portrait orientation is permitted\n   * - \"landscape\" – landscape orientations are permitted\n   * - \"landscape_left\" – landscape-left orientation is permitted\n   * - \"landscape_right\" – landscape-right orientation is permitted\n   */\n  screenOrientation?: ScreenOrientationTypes;\n  /**\n   * Describes heights where a sheet can rest.\n   * Works only when `stackPresentation` is set to `formSheet`.\n   * Defaults to `large`.\n   *\n   * Available values:\n   *\n   * - `large` - only large detent level will be allowed\n   * - `medium` - only medium detent level will be allowed\n   * - `all` - all detent levels will be allowed\n   *\n   * @platform ios\n   */\n  sheetAllowedDetents?: SheetDetentTypes;\n  /**\n   * Whether the sheet should expand to larger detent when scrolling.\n   * Works only when `stackPresentation` is set to `formSheet`.\n   * Defaults to `true`.\n   *\n   * @platform ios\n   */\n  sheetExpandsWhenScrolledToEdge?: boolean;\n  /**\n   * The corner radius that the sheet will try to render with.\n   * Works only when `stackPresentation` is set to `formSheet`.\n   *\n   * If set to non-negative value it will try to render sheet with provided radius, else it will apply system default.\n   *\n   * If left unset system default is used.\n   *\n   * @platform ios\n   */\n  sheetCornerRadius?: number;\n  /**\n   * Boolean indicating whether the sheet shows a grabber at the top.\n   * Works only when `stackPresentation` is set to `formSheet`.\n   * Defaults to `false`.\n   *\n   * @platform ios\n   */\n  sheetGrabberVisible?: boolean;\n  /**\n   * The largest sheet detent for which a view underneath won't be dimmed.\n   * Works only when `stackPresentation` is set to `formSheet`.\n   *\n   * If this prop is set to:\n   *\n   * - `large` - the view underneath won't be dimmed at any detent level\n   * - `medium` - the view underneath will be dimmed only when detent level is `large`\n   * - `all` - the view underneath will be dimmed for any detent level\n   *\n   * Defaults to `all`.\n   *\n   * @platform ios\n   */\n  sheetLargestUndimmedDetent?: SheetDetentTypes;\n  /**\n   * How the screen should appear/disappear when pushed or popped at the top of the stack.\n   * The following values are currently supported:\n   * - \"default\" – uses a platform default animation\n   * - \"fade\" – fades screen in or out\n   * - \"fade_from_bottom\" – performs a fade from bottom animation\n   * - \"flip\" – flips the screen, requires stackPresentation: \"modal\" (iOS only)\n   * - \"simple_push\" – performs a default animation, but without shadow and native header transition (iOS only)\n   * - `slide_from_bottom` – performs a slide from bottom animation\n   * - \"slide_from_right\" - slide in the new screen from right to left (Android only, resolves to default transition on iOS)\n   * - \"slide_from_left\" - slide in the new screen from left to right\n   * - \"ios\" - iOS like slide in animation (Android only, resolves to default transition on iOS)\n   * - \"none\" – the screen appears/dissapears without an animation\n   */\n  stackAnimation?: StackAnimationTypes;\n  /**\n   * How should the screen be presented.\n   * The following values are currently supported:\n   * - \"push\" – the new screen will be pushed onto a stack which on iOS means that the default animation will be slide from the side, the animation on Android may vary depending on the OS version and theme.\n   * - \"modal\" – the new screen will be presented modally. In addition this allow for a nested stack to be rendered inside such screens.\n   * - \"transparentModal\" – the new screen will be presented modally but in addition the second to last screen will remain attached to the stack container such that if the top screen is non opaque the content below can still be seen. If \"modal\" is used instead the below screen will get unmounted as soon as the transition ends.\n   * - \"containedModal\" – will use \"UIModalPresentationCurrentContext\" modal style on iOS and will fallback to \"modal\" on Android.\n   * - \"containedTransparentModal\" – will use \"UIModalPresentationOverCurrentContext\" modal style on iOS and will fallback to \"transparentModal\" on Android.\n   * - \"fullScreenModal\" – will use \"UIModalPresentationFullScreen\" modal style on iOS and will fallback to \"modal\" on Android.\n   * - \"formSheet\" – will use \"UIModalPresentationFormSheet\" modal style on iOS and will fallback to \"modal\" on Android.\n   */\n  stackPresentation?: StackPresentationTypes;\n  /**\n   * Sets the status bar animation (similar to the `StatusBar` component). Requires enabling (or deleting) `View controller-based status bar appearance` in your Info.plist file on iOS.\n   */\n  statusBarAnimation?: 'none' | 'fade' | 'slide';\n  /**\n   * Sets the status bar color (similar to the `StatusBar` component). Defaults to initial status bar color.\n   *\n   * @platform android\n   */\n  statusBarColor?: ColorValue;\n  /**\n   * Whether the status bar should be hidden on this screen. Requires enabling (or deleting) `View controller-based status bar appearance` in your Info.plist file on iOS. Defaults to `false`.\n   */\n  statusBarHidden?: boolean;\n  /**\n   * Sets the status bar color (similar to the `StatusBar` component). Requires enabling (or deleting) `View controller-based status bar appearance` in your Info.plist file on iOS. Defaults to `auto`.\n   */\n  statusBarStyle?: 'inverted' | 'auto' | 'light' | 'dark';\n  /**\n   * Sets the translucency of the status bar. Defaults to `false`.\n   *\n   * @platform android\n   */\n  statusBarTranslucent?: boolean;\n  /**\n   * Sets the direction in which you should swipe to dismiss the screen.\n   * When using `vertical` option, options `fullScreenSwipeEnabled: true`, `customAnimationOnSwipe: true` and `stackAnimation: 'slide_from_bottom'` are set by default.\n   * The following values are supported:\n   * - `vertical` – dismiss screen vertically\n   * - `horizontal` – dismiss screen horizontally (default)\n   *\n   * @platform ios\n   */\n  swipeDirection?: SwipeDirectionTypes;\n  /**\n   * Changes the duration (in milliseconds) of `slide_from_bottom`, `fade_from_bottom`, `fade` and `simple_push` transitions on iOS. Defaults to `350`.\n   * The duration of `default` and `flip` transitions isn't customizable.\n   *\n   * @platform ios\n   */\n  transitionDuration?: number;\n}\n\nexport interface ScreenContainerProps extends ViewProps {\n  children?: React.ReactNode;\n  /**\n   * A prop that gives users an option to switch between using Screens for the navigator (container). All children screens should have the same value of their \"enabled\" prop as their container.\n   */\n  enabled?: boolean;\n  /**\n   * A prop to be used in navigators always showing only one screen (providing only `0` or `2` `activityState` values) for better implementation of `ScreenContainer` on iOS.\n   */\n  hasTwoStates?: boolean;\n}\n\nexport interface GestureDetectorBridge {\n  stackUseEffectCallback: (\n    stackRef: React.MutableRefObject<React.Ref<NativeStackNavigatorProps>>\n  ) => void;\n}\n\nexport interface ScreenStackProps extends ViewProps {\n  children?: React.ReactNode;\n  /**\n   * A callback that gets called when the current screen finishes its transition.\n   */\n  onFinishTransitioning?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  gestureDetectorBridge?: React.MutableRefObject<GestureDetectorBridge>;\n  ref?: React.MutableRefObject<React.Ref<View>>;\n}\n\nexport interface ScreenStackHeaderConfigProps extends ViewProps {\n  /**\n   * Whether to show the back button with custom left side of the header.\n   */\n  backButtonInCustomView?: boolean;\n  /**\n   * Controls the color of the navigation header.\n   */\n  backgroundColor?: ColorValue;\n  /**\n   * Title to display in the back button.\n   * @platform ios.\n   */\n  backTitle?: string;\n  /**\n   * Allows for customizing font family to be used for back button title on iOS.\n   * @platform ios\n   */\n  backTitleFontFamily?: string;\n  /**\n   * Allows for customizing font size to be used for back button title on iOS.\n   * @platform ios\n   */\n  backTitleFontSize?: number;\n  /**\n   * Whether the back button title should be visible or not. Defaults to `true`.\n   * @platform ios\n   */\n  backTitleVisible?: boolean;\n  /**\n   * Blur effect to be applied to the header. Works with backgroundColor's alpha < 1.\n   * @platform ios\n   */\n  blurEffect?: BlurEffectTypes;\n  /**\n   * Pass HeaderLeft, HeaderRight and HeaderTitle\n   */\n  children?: React.ReactNode;\n  /**\n   * Controls the color of items rendered on the header. This includes back icon, back text (iOS only) and title text. If you want the title to have different color use titleColor property.\n   */\n  color?: ColorValue;\n  /**\n   * Whether the stack should be in rtl or ltr form.\n   */\n  direction?: 'rtl' | 'ltr';\n  /**\n   * Boolean indicating whether to show the menu on longPress of iOS >= 14 back button.\n   * @platform ios\n   */\n  disableBackButtonMenu?: boolean;\n  /**\n   * When set to true the header will be hidden while the parent Screen is on the top of the stack. The default value is false.\n   */\n  hidden?: boolean;\n  /**\n   * Boolean indicating whether to hide the back button in header.\n   */\n  hideBackButton?: boolean;\n  /**\n   * Boolean indicating whether to hide the elevation shadow or the bottom border on the header.\n   */\n  hideShadow?: boolean;\n  /**\n   * Boolean to set native property to prefer large title header (like in iOS setting).\n   * For large title to collapse on scroll, the content of the screen should be wrapped in a scrollable view such as `ScrollView` or `FlatList`.\n   * If the scrollable area doesn't fill the screen, the large title won't collapse on scroll.\n   * Only supported on iOS.\n   *\n   * @platform ios\n   */\n  largeTitle?: boolean;\n  /**\n   * Controls the color of the navigation header when the edge of any scrollable content reaches the matching edge of the navigation bar.\n   */\n  largeTitleBackgroundColor?: ColorValue;\n  /**\n   * Customize the color to be used for the large title. By default uses the titleColor property.\n   * @platform ios\n   */\n  largeTitleColor?: ColorValue;\n  /**\n   * Customize font family to be used for the large title.\n   * @platform ios\n   */\n  largeTitleFontFamily?: string;\n  /**\n   * Customize the size of the font to be used for the large title.\n   * @platform ios\n   */\n  largeTitleFontSize?: number;\n  /**\n   * Customize the weight of the font to be used for the large title.\n   * @platform ios\n   */\n  largeTitleFontWeight?: string;\n  /**\n   * Boolean that allows for disabling drop shadow under navigation header when the edge of any scrollable content reaches the matching edge of the navigation bar.\n   */\n  largeTitleHideShadow?: boolean;\n  /**\n   * Callback which is executed when screen header is attached\n   */\n  onAttached?: () => void;\n  /**\n   * Callback which is executed when screen header is detached\n   */\n  onDetached?: () => void;\n  /**\n   * String that can be displayed in the header as a fallback for `headerTitle`.\n   */\n  title?: string;\n  /**\n   * Allows for setting text color of the title.\n   */\n  titleColor?: ColorValue;\n  /**\n   * Customize font family to be used for the title.\n   */\n  titleFontFamily?: string;\n  /**\n   * Customize the size of the font to be used for the title.\n   */\n  titleFontSize?: number;\n  /**\n   * Customize the weight of the font to be used for the title.\n   */\n  titleFontWeight?: string;\n  /**\n   * A flag to that lets you opt out of insetting the header. You may want to\n   * set this to `false` if you use an opaque status bar. Defaults to `true`.\n   * Only supported on Android. Insets are always applied on iOS because the\n   * header cannot be opaque.\n   *\n   * @platform android\n   */\n  topInsetEnabled?: boolean;\n  /**\n   * Boolean indicating whether the navigation bar is translucent.\n   */\n  translucent?: boolean;\n}\n\nexport interface SearchBarProps {\n  /**\n   * Reference to imperatively modify search bar.\n   *\n   * Currently supported operations are:\n   *\n   * * `focus` - focuses the search bar\n   * * `blur` - removes focus from the search bar\n   * * `clearText` - removes any text present in the search bar input field\n   * * `setText` - sets the search bar's content to given value\n   * * `cancelSearch` - cancel search in search bar.\n   * * `toggleCancelButton` - depending on passed boolean value, hides or shows cancel button (iOS only)\n   */\n  ref?: React.RefObject<SearchBarCommands>;\n\n  /**\n   * The auto-capitalization behavior\n   */\n  autoCapitalize?: 'none' | 'words' | 'sentences' | 'characters';\n  /**\n   * Automatically focuses search bar on mount\n   *\n   * @platform android\n   */\n  autoFocus?: boolean;\n  /**\n   * The search field background color\n   */\n  barTintColor?: ColorValue;\n  /**\n   * The color for the cursor caret and cancel button text.\n   *\n   * @platform ios\n   */\n  tintColor?: ColorValue;\n  /**\n   * The text to be used instead of default `Cancel` button text\n   *\n   * @platform ios\n   */\n  cancelButtonText?: string;\n  /**\n   * Specifies whether the back button should close search bar's text input or not.\n   *\n   * @platform android\n   */\n  disableBackButtonOverride?: boolean;\n  /**\n   * Indicates whether to hide the navigation bar\n   *\n   * @platform ios\n   */\n  hideNavigationBar?: boolean;\n  /**\n   * Indicates whether to hide the search bar when scrolling\n   *\n   * @platform ios\n   */\n  hideWhenScrolling?: boolean;\n\n  /**\n   * Sets type of the input. Defaults to `text`.\n   *\n   * @platform android\n   */\n  inputType?: 'text' | 'phone' | 'number' | 'email';\n  /**\n   * Indicates whether to obscure the underlying content\n   */\n  obscureBackground?: boolean;\n  /**\n   * A callback that gets called when search bar has lost focus\n   */\n  onBlur?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  /**\n   * A callback that gets called when the cancel button is pressed\n   *\n   * @platform ios\n   */\n  onCancelButtonPress?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  /**\n   * A callback that gets called when the text changes. It receives the current text value of the search bar.\n   */\n  onChangeText?: (e: NativeSyntheticEvent<TextInputFocusEventData>) => void;\n\n  /**\n   * A callback that gets called when search bar is closed\n   *\n   * @platform android\n   */\n  onClose?: () => void;\n  /**\n   * A callback that gets called when search bar has received focus\n   */\n  onFocus?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  /**\n   * A callback that gets called when search bar is opened\n   *\n   * @platform android\n   */\n  onOpen?: () => void;\n  /**\n   * A callback that gets called when the search button is pressed. It receives the current text value of the search bar.\n   */\n  onSearchButtonPress?: (\n    e: NativeSyntheticEvent<TextInputFocusEventData>\n  ) => void;\n  /**\n   * Text displayed when search field is empty\n   */\n  placeholder?: string;\n  /**\n   * Position of the search bar\n   *\n   * Supported values:\n   *\n   * * `automatic` - the search bar is placed according to current layout\n   * * `inline` - the search bar is placed on the trailing edge of navigation bar\n   * * `stacked` - the search bar is placed below the other content in navigation bar\n   *\n   * Defaults to `stacked`\n   *\n   * @platform iOS (>= 16.0)\n   */\n  placement?: SearchBarPlacement;\n  /**\n   * The search field text color\n   */\n  textColor?: ColorValue;\n  /**\n   * The search hint text color\n   *\n   * @plaform android\n   */\n  hintTextColor?: ColorValue;\n  /**\n   * The search and close icon color shown in the header\n   *\n   * @plaform android\n   */\n  headerIconColor?: ColorValue;\n  /**\n   * Show the search hint icon when search bar is focused\n   *\n   * @plaform android\n   * @default true\n   */\n  shouldShowHintSearchIcon?: boolean;\n}\n","import * as React from 'react';\n\nimport TransitionProgressContext from './TransitionProgressContext';\n\nexport default function useTransitionProgress() {\n  const progress = React.useContext(TransitionProgressContext);\n\n  if (progress === undefined) {\n    throw new Error(\n      \"Couldn't find values for transition progress. Are you inside a screen in Native Stack?\"\n    );\n  }\n\n  return progress;\n}\n","import { BackHandler, Platform } from 'react-native';\n\nexport const isSearchBarAvailableForCurrentPlatform = [\n  'ios',\n  'android',\n].includes(Platform.OS);\n\nexport function executeNativeBackPress() {\n  // This function invokes the native back press event\n  BackHandler.exitApp();\n  return true;\n}\n\n// Because of a bug introduced in https://github.com/software-mansion/react-native-screens/pull/1646\n// react-native-screens v3.21 changed how header's backTitle handles whitespace strings in https://github.com/software-mansion/react-native-screens/pull/1726\n// To allow for backwards compatibility in @react-navigation/native-stack we need a way to check if this version or newer is used.\n// See https://github.com/react-navigation/react-navigation/pull/11423 for more context.\nexport const isNewBackTitleImplementation = true;\n","const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n"],"names":["_createNativeStackNavigator","_interopRequireDefault","require","_NativeStackView","_native","React","_interopRequireWildcard","_jsxRuntime","_jsxFileName","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","NativeStackNavigator","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties2","_useNavigationBuilder","useNavigationBuilder","StackRouter","state","descriptors","navigation","NavigationContent","useEffect","addListener","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","assign","StackActions","popToTop","target","key","jsx","_default","exports","createNavigatorFactory","useInvalidPreventRemoveError","_state$routes$find","_React$useState","useState","_React$useState2","_slicedToArray2","nextDismissedKey","setNextDismissedKey","dismissedRouteName","routes","find","route","name","message","console","error","_preventedDescriptor$","_preventedDescriptor$2","_usePreventRemoveCont","usePreventRemoveContext","preventedRoutes","preventedRouteKey","keys","preventedDescriptor","isHeaderBackButtonMenuEnabledOnPreventedScreen","options","headerBackButtonMenuEnabled","preventedRouteName","_reactNative","_AppContainer","_this","DebugContainer","props","View","collapsable","process","env","NODE_ENV","stackPresentation","Platform","OS","_ReactNativeStyleAttributes","processFonts","fontFamilies","_ReactNativeStyleAttr","fontFamilyProcessor","ReactNativeStyleAttributes","fontFamily","map","_elements","_reactNativeScreens","_FontProcessor","HeaderConfig","_ref2","_headerTitleStyleFlat","_headerStyleFlattened","headerBackImageSource","headerBackTitle","headerBackTitleStyle","_ref$headerBackTitleV","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBackground","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","headerTopInsetEnabled","title","canGoBack","_useTheme","useTheme","colors","tintColor","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","_processFonts","_processFonts2","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","getHeaderTitle","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","Error","backButtonInCustomView","translucent","jsxs","ScreenStackHeaderConfig","backgroundColor","card","backTitle","isNewBackTitleImplementation","backTitleVisible","backTitleFontSize","blurEffect","direction","I18nManager","getConstants","isRTL","disableBackButtonMenu","hidden","hideBackButton","hideShadow","largeTitle","largeTitleBackgroundColor","largeTitleColor","largeTitleFontSize","largeTitleFontWeight","largeTitleHideShadow","topInsetEnabled","Fragment","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","style","styles","row","HeaderTitle","undefined","ScreenStackHeaderBackButtonImage","source","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","create","flexDirection","alignItems","_reactNativeSafeAreaContext","_warnOnce","_useDismissedRouteError","_useInvalidPreventRemoveError","_DebugContainer","_HeaderConfig","isAndroid","MaybeNestedStack","presentation","headerHeight","header","_options$headerShown","contentStyle","isHeaderInModal","headerShownPreviousRef","useRef","warnOnce","current","content","container","background","ScreenStack","Screen","enabled","absoluteFill","SceneView","_preventedRoutes$rout","focused","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","render","animationDuration","_options$animationTyp","animationTypeForReplace","gestureEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","_options$presentation","_options$gestureDirec","gestureDirection","nextGestureDirection","gestureDirectionOverride","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isModal","isIPhone","isPad","isTV","isLandscape","width","height","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","parentHeaderBack","HeaderBackContext","topInset","top","hasDynamicIsland","statusBarHeight","defaultHeaderHeight","getDefaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","headerBack","isRemovePrevented","preventRemove","customAnimationOnSwipe","fullScreenSwipeEnabled","homeIndicatorHidden","replaceAnimation","stackAnimation","screenOrientation","swipeDirection","transitionDuration","isNativeStack","nativeBackButtonDismissalEnabled","preventNativeDismiss","NavigationContext","Provider","value","NavigationRouteContext","accessibilityElementsHidden","importantForAccessibility","scene","onLayout","nativeEvent","layout","absolute","back","NativeStackViewInner","_ref3","_this2","_useDismissedRouteErr","useDismissedRouteError","_state$routes","_state$routes2","previousKey","nextKey","emit","type","data","closing","event","pop","dismissCount","NativeStackView","SafeAreaProviderCompat","flex","position","left","right","zIndex","elevation","overflow","_react","infiniteThenable","then","Suspender","freeze","Freeze","_ref2$placeholder","placeholder","Suspense","fallback","createContext","_FullWindowOverlayNativeComponent","NativeFullWindowOverlay","FullWindowOverlayNativeComponent","FullWindowOverlay","warn","_TransitionProgressContext","_DelayedFreeze","_core","_ScreenNativeComponent","_ModalScreenNativeComponent","_excluded2","_excluded3","_callSuper","o","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","NativeScreen","ScreenNativeComponent","AnimatedNativeScreen","Animated","createAnimatedComponent","AnimatedNativeModalScreen","ModalScreenNativeComponent","InnerScreen","_React$Component","_classCallCheck2","_len","arguments","length","args","Array","_key","concat","ref","Value","progress","goingForward","setRef","onComponentRef","_inherits2","_createClass2","setNativeProps","_this$ref","_this$props","_this$props$enabled","screensEnabled","_this$props$freezeOnB","freezeEnabled","_rest$sheetAllowedDet","sheetAllowedDetents","_rest$sheetLargestUnd","sheetLargestUndimmedDetent","_rest$sheetGrabberVis","sheetGrabberVisible","_rest$sheetCornerRadi","sheetCornerRadius","_rest$sheetExpandsWhe","sheetExpandsWhenScrolledToEdge","isNativePlatformSupported","_gestureResponseDista","_gestureResponseDista2","_gestureResponseDista3","_gestureResponseDista4","AnimatedScreen","active","activityState","gestureResponseDistance","onGestureCancel","handleRef","_ref$viewConfig","_ref$viewConfig$valid","_ref$_viewConfig","_ref$_viewConfig$vali","viewConfig","validAttributes","display","_viewConfig","start","end","bottom","onTransitionProgress","useNativeDriver","Component","ScreenContext","_React$Component2","ScreenWrapper","context","contextType","_ScreenContainerNativeComponent","_ScreenNavigationContainerNativeComponent","NativeScreenContainer","ScreenContainerNativeComponent","NativeScreenNavigationContainer","ScreenNavigationContainerNativeComponent","ScreenContainer","_props$enabled","hasTwoStates","ScreenNavigationContainer","_ScreenStackNativeComponent","NativeScreenStack","ScreenStackNativeComponent","gestureDetectorBridge","size","Children","count","childrenWithFreeze","child","_props$descriptor","_props$descriptors","_descriptor$options$f","_descriptor$options","isFreezeEnabled","stackUseEffectCallback","_ScreenStackHeaderConfigNativeComponent","_ScreenStackHeaderSubviewNativeComponent","ScreenStackHeaderConfigNativeComponent","ScreenStackHeaderSubview","ScreenStackHeaderSubviewNativeComponent","headerSubview","Image","resizeMode","fadeDuration","justifyContent","_SearchBarNativeComponent","NativeSearchBar","SearchBarNativeComponent","NativeSearchBarCommands","SearchBarNativeCommands","nativeSearchBarRef","createRef","_callMethodWithRef","method","blur","focus","toggleCancelButton","flag","clearText","setText","cancelSearch","_reactFreeze","DelayedFreeze","freezeState","setFreezeState","setImmediate","clearImmediate","shouldUseActivityState","ENABLE_SCREENS","enableScreens","shouldEnableScreens","UIManager","getViewManagerConfig","ENABLE_FREEZE","enableFreeze","shouldEnableReactFreeze","_codegenNativeComponent","codegenNativeComponent","interfaceOnly","TurboModuleRegistry","_codegenNativeCommands","Commands","codegenNativeCommands","supportedCommands","_types","forEach","_exportNames","enumerable","_Screen","_ScreenContainer","_ScreenStack","_ScreenStackHeaderConfig","_SearchBar","_FullWindowOverlay","_NativeScreensModule","_GHContext","_utils","_useTransitionProgress","GHContext","useTransitionProgress","TransitionProgressContext","includes","executeNativeBackPress","BackHandler","exitApp"],"sourceRoot":""}